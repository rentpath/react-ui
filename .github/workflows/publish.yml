name: publish
on:
  pull_request:
    types: [closed]
  workflow_dispatch:
jobs:
  publish_packages:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: clone repo with full history for lerna
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
          token: ${{ github.token }}

      - name: cache node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules/
          key: reactui-modules-${{ hashFiles('yarn.lock') }}

      - name: get node version
        id: node-version
        run: echo "::set-output name=value::$( cat .node-version )"

      - name: set up node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.node-version.outputs.value }}
          registry-url: https://npm.pkg.github.com
          scope: "@rentpath"

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache dependencies
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_TOKEN }}
        run: |
          yarn config set @rentpath:registry https://npm.pkg.github.com
          # yarn --frozen-lockfile --production=false
          yarn install

      - name: get bin path
        id: yarn-bin
        run: echo "::set-output name=value::$( yarn bin )"

      - name: "configure git for lerna"
        run: |
          git config --global user.email "gha_bot@rentpath.com"
          git config --global user.name "GHA Bot"

      - name: lerna clean
        run: ${{ steps.yarn-bin.outputs.value }}/lerna run clean

      - name: lerna build
        run: ${{ steps.yarn-bin.outputs.value }}/lerna run build

      - name: lerna publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_TOKEN }}
        run: ${{ steps.yarn-bin.outputs.value }}/lerna publish --exact --conventional-commits --registry=https://npm.pkg.github.com --yes
